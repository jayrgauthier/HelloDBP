/********************************************************
  Auto-generated EPL file for DE type "HelloDBP.HelloEvents.ThingAlert" (variant 3a443e488cdebd4f)
  Created with 10.1.0.1
  Note: This file is automatically generated and should not be modified by hand
********************************************************/

package HelloDBP.HelloEvents;

/**
 * Auto-generated from digital event type ThingAlert.
 *
 * The field '_guid' can be used as a unique identifier across all instances of this event type coming from DES.
 * If this event has been newly created within Apama, DES will set the unique identifier for you at the point it is
 * sent, unless your application has already set it.
 */
@com.softwareag.connectivity.MessageId("_guid")
event ThingAlert {
	string Id;

	string Alert;

	/** Contains values representing time, in seconds since the epoch. */
	float/* TIME */ Time;

	string Severity;

	string _guid;

	sequence<integer>/* BYTES */ _isData;

	/**
	 * Send this event to DES.
	 * @deprecated [This action has been deprecated, use the CHANNEL constant to send an event to the corresponding Apama channel.]
	 * @see CHANNEL
	 */
	action sendToDES() {
		send self to CHANNEL;
	}

	/**
	 * Subscribe to receive events of this type from DES.
	 * @deprecated [This action has been deprecated, use the CHANNEL constant to subscribe to the corresponding Apama channel.]
	 * @see CHANNEL
	 */
	static action subscribe() {
		monitor.subscribe(CHANNEL);
	}

	/**
	 * Unsubscribe from receiving events of this type from DES.
	 * @deprecated [This action has been deprecated, use the CHANNEL constant to unsubscribe from the corresponding Apama channel.]
	 * @see CHANNEL
	 */
	static action unsubscribe() {
		monitor.unsubscribe(CHANNEL);
	}

	/**
	 * The Apama channel associated with this event type.
	 * This channel can be used to send events of this type to DES, subscribe to receive events of this type from DES, 
	 * unsubscribe from receiving events of this type from DES, and get the sending or receiving chain associated with this event type.
	 * 
	 * Sending, subscribing and unsubscribing to this channel is no different than interacting with any other Apama channel.
	 * To get the Chain instance associated with sending or receiving of this type, use the com.softwareag.connectivity.ConnectivityPlugins.getChainByChannel action.
	 */
	constant string CHANNEL := "des:HelloDBP.HelloEvents.ThingAlert";

}